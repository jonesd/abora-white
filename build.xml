<project name="abora-white" default="dist" basedir=".">
	<description>
    	Abora server written in Java and based on Udanax-Gold source.
    </description>

	<!-- set global properties for this build -->
	<property environment="env"/>
  
	<property name="name" value="abora-white"/>
	<property name="Name" value="Abora-White"/>
	<property name="src" location="src"/>
	<property name="build" location="build"/>
	<property name="dist"  location="dist"/>
	<property name="lib.dir" location="lib"/>
	<property name="ant.home" location="${env.ANT_HOME}"/>
    
	<property name="junit.dir" location="${build}/docs/junit"/>
	<property name="javadoc.dir" location="${build}/docs/api"/>
	<property name="clover.dir" location="${build}/docs/clover"/>
	<property name="clover.history.dir" location="${build}/docs/clover-historical"/>
	<property name="clover.includesource" value="true"/>
   
   
  <target name="init">
    <tstamp/>
    <mkdir dir="${build}"/>
    <mkdir dir="${build}/bin"/>
    <mkdir dir="${build}/docs"/>

	<path id="clover.classpath">
		<pathelement path="${clover.home}/lib/clover.jar"/>
	</path>
  </target>

  <target name="clean"
        description="clean up" >
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>


  <target name="compile" depends="init"
        description="compile the source " >
    <javac srcdir="${src}" destdir="${build}/bin" extdirs="${lib.dir}" />
  </target>

  <target name="dist" depends="with.clover, clean, init, compile, test, clover.historypoint, docs"
        description="generate the distribution" >
    <mkdir dir="${dist}/lib"/>
    <jar jarfile="${dist}/lib/${name}-${DSTAMP}.jar" basedir="${build}/bin"/>
    <!-- TODO following over-complexity is a poor attempt to get all
    	zipped content under a common root dir -->
    <property name="parent.dir" value="${name}"/>
    <zip destfile="${dist}/${name}-${DSTAMP}.src.zip" basedir=".." excludes="**/*">
  	 	<fileset dir="..">
    		<include name="${parent.dir}/build.xml"/>
    		<include name="${parent.dir}/ReadMe.txt"/>
    		<include name="${parent.dir}/src/**/*.java"/>
    		<include name="${parent.dir}/docs/**/*.html"/>
    	</fileset>
    </zip>
  </target>
  
 
<!--**************************************************************-->
<!--** JUnit tests ***********************************************-->
<!--**************************************************************-->

<target name="test" depends="compile">
	<mkdir dir="${junit.dir}/report"/>
	<junit printsummary="true" haltonerror="true">
		<formatter type="xml"/>
		<batchtest fork="yes" todir="${junit.dir}/report">
			<fileset dir="${src}">
				<include name="**/*Test*.java"/>
				<exclude name="**/AllTests.java"/>
			</fileset>
		</batchtest>
		<classpath>
  			<pathelement path="${build}/bin"/>
  			<pathelement path="${ant.home}/lib/clover.jar"/>
  		</classpath>
	</junit>
</target>
  
<target name="test.report" depends="test">
	<mkdir dir="${junit.dir}/html"/>
	<junitreport todir="${junit.dir}/report">
		<fileset dir="${junit.dir}/report">
			<include name="TEST-*.xml"/>
		</fileset>
		<report format="frames" todir="${junit.dir}/html"/>
	</junitreport>
</target>


<!--**************************************************************-->
<!--** JavaDoc ***************************************************-->
<!--**************************************************************-->

<target name="javadoc" depends="compile">
	<mkdir dir="${javadoc.dir}"/>
	<delete dir="${javadoc.dir}"/>
		<javadoc destdir="${javadoc.dir}"
           author="true"
           version="true"
           use="false"
           windowtitle="${Name} API"
           noindex="true"
           verbose="false"
           nodeprecatedlist="true"
           >
           <!-- additionalparam="-linksource" -->
           
		<packageset dir="${src}" defaultexcludes="yes">
			<include name="org/abora/white/**" />
			<exclude name="**/tests/**"/>
		</packageset>
       
		<doctitle><![CDATA[<h1>${Name}</h1>]]></doctitle>
		<bottom><![CDATA[<i>Copyright &#169; 2003 David G Jones. All Rights Reserved.</i><br><i>Original Udanax-Gold - Copyright &#169; 1979-1999 Udanax.com. All rights reserved.</i>]]></bottom>		
		<tag name="todo" scope="all" description="To do:" />
<!--    <group title="Group 1 Packages" packages="com.dummy.test.a*"/> -->
<!--    <group title="Group 2 Packages" packages="com.dummy.test.b*:com.dummy.test.c*"/> -->
<!--    <link offline="true" href="http://java.sun.com/products/jdk/1.2/docs/api/" packagelistLoc="C:\tmp"/> -->
<!--    <link href="http://developer.java.sun.com/developer/products/xml/docs/api/"/> -->
	</javadoc>
</target>

<target name="docs.copyoriginal" depends="init">
	<copy todir="${build}/docs">
    	<fileset dir="docs"/>
	</copy>
</target>

<target name="docs" depends="init, docs.copyoriginal, test.report, javadoc, clover.report"/>


<!--**************************************************************-->
<!--** Clover Code Coverage Support ******************************-->
<!--**************************************************************-->

<target name="with.clover">
<!--<target name="with.clover" if="env.CLOVER_HOME">-->
	<echo message="*** Including Clover support ***"/>
	<taskdef resource="clovertasks"/>
	
	<clover-setup initString="${build}/clover_coverage.db">
		<files>
			<exclude name="**/tests/**"/>
	 	</files>
	</clover-setup>
<!--	<property name="build.compiler" value="org.apache.tools.ant.taskdefs.CloverCompilerAdapter"/>-->
</target>
	
<target name="clover.report" depends="with.clover, init">
<!--<target name="clover.report" depends="with.clover, init" if="env.CLOVER_HOME">-->
	<clover-report>
		<current title="${Name}" outfile="${clover.dir}">
			<format type="html" srcLevel="${clover.includesource}"/> 
		</current>
		<historical title="${Name}" outfile="${clover.history.dir}" historyDir="${basedir}/.clover_historical">
			<format type="html"/>
		</historical>
	</clover-report>
</target>

<target name="clover.historypoint" depends="with.clover, init">
<!--<target name="clover.historypoint" depends="with.clover, init" if="env.CLOVER_HOME">-->
	<mkdir dir="${basedir}/.clover_historical"/>
	<clover-historypoint historyDir="${basedir}/.clover_historical"/>
</target>

<target name="just.clover" depends="with.clover, clean, compile, test, clover.report"/>

<!--**************************************************************-->
</project>
