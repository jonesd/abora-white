<project name="abora-white" default="dist" basedir=".">
    <description>
    	Abora server written in Java and based on Udanax-Gold source.
    </description>

  <!-- set global properties for this build -->
  <property environment="env"/>
  
  <property name="name" value="abora-white"/>
  <property name="Name" value="Abora-White"/>
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="lib.dir" location="lib"/>
    
   <property name="junit.dir" location="${build}/docs/junit"/>
   <property name="javadoc.dir" location="${build}/docs/api"/>
   <property name="clover.dir" location="${build}/docs/clover"/>

	<property name="clover.home" value="${env.CLOVER_HOME}"/>
   
   
  <target name="init">
    <tstamp/>
    <mkdir dir="${build}"/>
    <mkdir dir="${build}/bin"/>
    <mkdir dir="${build}/docs"/>

	<property name="clover.initstring" location="${build}/clover_coverage.db"/>
	<property name="clover.excludes" value="**/tests/**"/>
	
	<path id="clover.classpath">
		<pathelement path="${clover.home}/lib/clover.jar"/>
  		<pathelement path="${clover.home}/lib/velocity.jar"/>
	</path>
  </target>


  <target name="compile" depends="init"
        description="compile the source " >
    <javac srcdir="${src}" destdir="${build}/bin" extdirs="${lib.dir}" />
  </target>

  <target name="dist" depends="with.clover, clean, init, compile, docs"
        description="generate the distribution" >
    <mkdir dir="${dist}/lib"/>
    <jar jarfile="${dist}/lib/${name}-${DSTAMP}.jar" basedir="${build}/bin"/>
    <!-- TODO following over-complexity is a poor attempt to get all
    	zipped content under a common root dir -->
    <property name="parent.dir" value="${name}"/>
    <zip destfile="${dist}/${name}-${DSTAMP}.src.zip" basedir=".." excludes="**/*">
  	 	<fileset dir="..">
    		<include name="${parent.dir}/build.xml"/>
    		<include name="${parent.dir}/ReadMe.txt"/>
    		<include name="${parent.dir}/src/**/*.java"/>
    		<include name="${parent.dir}/docs/**/*.html"/>
    	</fileset>
    </zip>
  </target>

  <target name="clean"
        description="clean up" >
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
  

  <target name="test" depends="compile">
  	<mkdir dir="${junit.dir}/report"/>
  	<junit printsummary="true" haltonerror="true">
  		 <formatter type="xml"/>
  		  <batchtest fork="yes" todir="${junit.dir}/report">
    <fileset dir="${src}">
      <include name="**/*Test*.java"/>
      <exclude name="**/AllTests.java"/>
    </fileset>
  </batchtest>
  		<classpath>
  			<pathelement path="${build}/bin"/>
  		</classpath>
		   <classpath refid="clover.classpath"/>	
  	</junit>
  </target>
  
  <target name="test.report" depends="test">
  	<mkdir dir="${junit.dir}/html"/>
	  <junitreport todir="${junit.dir}/report">
		  <fileset dir="${junit.dir}/report">
		    <include name="TEST-*.xml"/>
		  </fileset>
		  <report format="frames" todir="${junit.dir}/html"/>
	</junitreport>
  </target>

	<target name="javadoc" depends="compile">
	<mkdir dir="${javadoc.dir}"/>
	<delete dir="${javadoc.dir}"/>
		<javadoc destdir="${javadoc.dir}"
           author="true"
           version="true"
           use="true"
           windowtitle="${Name} API"
           additionalparam="-linksource">
           
   <packageset dir="${src}" defaultexcludes="yes">
      <include name="org/abora/white/**" />
      <exclude name="**/tests/**"/>
    </packageset>
       
    <doctitle><![CDATA[<h1>${Name}</h1>]]></doctitle>
    <bottom><![CDATA[<i>Copyright &#169; 2003 David G Jones. All Rights Reserved.</i>]]></bottom>
    <tag name="todo" scope="all" description="To do:" />
<!--    <group title="Group 1 Packages" packages="com.dummy.test.a*"/> -->
<!--    <group title="Group 2 Packages" packages="com.dummy.test.b*:com.dummy.test.c*"/> -->
<!--    <link offline="true" href="http://java.sun.com/products/jdk/1.2/docs/api/" packagelistLoc="C:\tmp"/> -->
<!--    <link href="http://developer.java.sun.com/developer/products/xml/docs/api/"/> -->
		</javadoc>
	</target>

	<target name="docs" depends="init">
	
		<copy todir="${build}/docs">
    		<fileset dir="docs"/>
		</copy>
	  <antcall target="test.report"/>
	  <antcall target="javadoc"/>
	  <antcall target="clover.report"/>
	</target>

	<target name="with.clover" if="env.CLOVER_HOME">
		<echo message="*** Including Clover support ***"/>
		<property name="build.compiler"
            value="org.apache.tools.ant.taskdefs.CloverCompilerAdapter"/>
	</target>
	
	<target name="clover.report" depends="init" if="env.CLOVER_HOME">
  <java classname="com.cortexeb.tools.clover.reporters.html.HtmlReporter" fork="true">
   <arg line="--outputdir ${clover.dir} --showSrc --initstring ${clover.initstring} --title '${Name}'"/>
   <classpath refid="clover.classpath"/>
  </java>
</target>
</project>
